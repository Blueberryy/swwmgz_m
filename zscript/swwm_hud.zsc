// The SWWM GZ HUD is mostly built on top of what I had already done for SWWM Z, also a bit of Dark Souls

Class MsgLine
{
	String str;
	int tic, type, rep;
}

Class SWWMStatusBar : BaseStatusBar
{
	TextureID StatusTex, WeaponTex, ScoreTex, InventoryTex, ChatTex[3],
		HealthTex[4], FuelTex, DashTex;
	HUDFont mTewiFont;

	Array<MsgLine> ChatMsgs, DeathMsgs, MiscMsgs, PickMsgs;

	// client cvars
	transient CVar safezone, maxchat, maxdeath, maxmisc, maxpick;

	DynamicValueInterpolator HealthInter;

	override void FlushNotify()
	{
		ChatMsgs.Clear();
		DeathMsgs.Clear();
		MiscMsgs.Clear();
		PickMsgs.Clear();
	}

	override void Tick()
	{
		Super.Tick();
		// prune old messages
		HealthInter.Update(CPlayer.health);
	}

	override void Init()
	{
		Super.Init();
		SetSize(0,640,400);
		StatusTex = TexMan.CheckForTexture("graphics/HUD/StatusBox.png",TexMan.Type_Any);
		DashTex = TexMan.CheckForTexture("graphics/HUD/DashIcon.png",TexMan.Type_Any);
		FuelTex = TexMan.CheckForTexture("graphics/HUD/FuelBar.png",TexMan.Type_Any);
		HealthTex[0] = TexMan.CheckForTexture("graphics/HUD/HealthBar0.png",TexMan.Type_Any);
		HealthTex[1] = TexMan.CheckForTexture("graphics/HUD/HealthBar1.png",TexMan.Type_Any);
		HealthTex[2] = TexMan.CheckForTexture("graphics/HUD/HealthBar2.png",TexMan.Type_Any);
		HealthTex[3] = TexMan.CheckForTexture("graphics/HUD/HealthBar3.png",TexMan.Type_Any);
		mTewiFont = HUDFont.Create("TewiShaded");
		HealthInter = DynamicValueInterpolator.Create(1000,2.5,1,32);
	}

	override void Draw( int state, double TicFrac )
	{
		Super.Draw(state,TicFrac);
		if ( (state != HUD_StatusBar) && (state != HUD_Fullscreen) ) return;
		BeginHUD();
		let d = Demolitionist(CPlayer.mo);
		Vector2 hs = GetHUDScale();
		Vector2 ss = (Screen.GetWidth()/hs.x,Screen.GetHeight()/hs.y);
		Screen.DrawTexture(StatusTex,false,20,ss.y-47,DTA_VirtualWidthF,ss.x,DTA_VirtualHeightF,ss.y,DTA_KeepRatio,true);
		if ( d && (((d.dashcooldown <= 0) && (d.dashfuel >= 20.)) || (gametic%8 < 4)) )
			Screen.DrawTexture(DashTex,false,22,ss.y-45,DTA_VirtualWidthF,ss.x,DTA_VirtualHeightF,ss.y,DTA_KeepRatio,true);
		int fw = d?int(d.dashfuel*1.12):0;
		Screen.DrawTexture(FuelTex,false,42,ss.y-45,DTA_VirtualWidthF,ss.x,DTA_VirtualHeightF,ss.y,DTA_KeepRatio,true,DTA_WindowRight,fw);
		int ht = clamp(HealthInter.GetValue(),0,10000);
		int hw = int(min(ht,1000)*0.1);
		Screen.DrawTexture(HealthTex[0],false,22,ss.y-35,DTA_VirtualWidthF,ss.x,DTA_VirtualHeightF,ss.y,DTA_KeepRatio,true,DTA_WindowRight,hw);
		if ( ht > 1000 )
		{
			hw = int(min(ht-1000,1000)*0.1);
			Screen.DrawTexture(HealthTex[1],false,22,ss.y-35,DTA_VirtualWidthF,ss.x,DTA_VirtualHeightF,ss.y,DTA_KeepRatio,true,DTA_WindowRight,hw);
		}
		if ( ht > 2000 )
		{
			hw = int(min(ht-1000,4000)*0.025);
			Screen.DrawTexture(HealthTex[2],false,22,ss.y-35,DTA_VirtualWidthF,ss.x,DTA_VirtualHeightF,ss.y,DTA_KeepRatio,true,DTA_WindowRight,hw);
		}
		if ( ht > 5000 )
		{
			hw = int(min(ht-5000,5000)*0.02);
			Screen.DrawTexture(HealthTex[2],false,22,ss.y-35,DTA_VirtualWidthF,ss.x,DTA_VirtualHeightF,ss.y,DTA_KeepRatio,true,DTA_WindowRight,hw);
		}
		int hcolor = Font.CR_RED;
		if ( ht > 5000 ) hcolor = Font.CR_GOLD;
		else if ( ht > 2000 ) hcolor = Font.CR_PURPLE;
		else if ( ht > 1000 ) hcolor = Font.CR_CYAN;
		Screen.DrawText(mTewiFont.mFont,hcolor,128,ss.y-36,String.Format("%04d",clamp(ht,0,9999)),DTA_VirtualWidthF,ss.x,DTA_VirtualHeightF,ss.y,DTA_KeepRatio,true);
	}
}
